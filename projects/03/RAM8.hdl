// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM8.hdl
/**
 * Memory of eight 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    //// 先通过DMux把load分发，然后分别用Register芯片，最后用Mux控制输出。类似递归
    DMux8Way(in=load , sel=address , a=a , b=b , c=c , d=d , e=e , f=f , g=g , h=h );

    Register(in=in , load=a , out=aa );
    Register(in=in , load=b , out=bb );
    Register(in=in , load=c , out=cc );
    Register(in=in , load=d , out=dd );
    Register(in=in , load=e , out=ee );
    Register(in=in , load=f , out=ff );
    Register(in=in , load=g , out=gg );
    Register(in=in , load=h , out=hh );

    Mux8Way16(a=aa , b=bb , c=cc , d=dd , e=ee , f=ff , g=gg , h=hh , sel=address , out=out );


    
}